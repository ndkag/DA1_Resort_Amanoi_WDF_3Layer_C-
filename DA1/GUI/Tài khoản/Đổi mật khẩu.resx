<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bunifuElipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGaWqadolam7aJWpu2iVqbtolam7aJWpu2iVqbtolam7aJWpu2iV
        qbtolam7aJWpu2iVqbtolam7aJWpu2aWqadolKpdZ5apd2eWqXdnlql3Z5apd2eWqXdnlql3Z5apd2eW
        qXdnlql3Z5apd2eWqXdnlql3Z5apd2eWqXdolKpdZpSnN2WWqURllqlEZZapRGWWqURllqlEZZapRGWW
        qURllqlEZZapRGWWqURllqlEZZapRGWWqURllqlEZpSnN2aVqtFnlanuZ5Wp7meVqe5nlanuZ5Wp7meV
        qe5nlanuZ5Wp7meVqe5nlanuZ5Wp7meVqe5nlanuZ5Wp7meWqdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZ5WquWWVqjAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABnlKo5Z5apuGeVqaFnlqnQVaqqBgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGaWqV9llag1AAAAAAAAAABhkqoVZ5Wp42iWqZtplqURZpWp5WiV
        qYAAAAAAAAAAAAAAAAAAAAAAAAAAAGWWqj9nlan8ZZapRAAAAACAgIACZ5WquWeVqs5gn58IAAAAAGeV
        qU1nlan6ZZWqMAAAAAAAAAAAAAAAAGCPrxBnlKnhZ5WpvgAAAAAAAAAAZpWpf2eVqe5plq0iAAAAAAAA
        AAAAAAAAZpaoomeVqc9mmZkFAAAAAAAAAABmlqmnZpWo4GeVqfpnlqhhZZapRGeVqftnlalNAAAAAAAA
        AAAAAAAAAAAAAGOcqhJnlanmZpWpfwAAAABnlqlcZ5Sp+WiXpzFnlapjZ5Sp+WeVqexnlKmGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAaZaqTmeUqflnlKhPZ5Wp8GaUqnUAAAAAAAAAAGiVqYBnlaqtVaqqAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABnlamjZ5Wp/meUqb2AgIACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5yqEmeVqa5kkq0cAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAAAAAAA//8AAP//AAAAAAAA//8AAH/+AAA//AAAn7kAAN87
        AADONwAA7scAAPXPAADx/wAA+/8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGeUqT5nlKmIZ5SpiGeUqYhnlKmIZ5SpiGeUqYhnlKmIZ5SpiGeU
        qYhnlKmIZ5SpiGeUqYhnlKmIZ5SpiGeUqYhnlKmIZ5SpiGeUqYhnlKmIZ5SpiGeUqYhnlKmIZ5SpiGeU
        qYhnlKmIZ5SpiGeUqYhnlKmIZ5SpiGeUqYhplqc9Z5Sp7WeVqf9nlan/Z5Wp/2eVqf9nlan/Z5Wp/2eV
        qf9nlan/Z5Wp/2eVqf9nlan/Z5Wp/2eVqf9nlan/Z5Wp/2eVqf9nlan/Z5Wp/2eVqf9nlan/Z5Wp/2eV
        qf9nlan/Z5Wp/2eVqf9nlan/Z5Wp/2eVqf9nlan/Z5Wp/2eUqe1olqiWaJWp6meVqe5nlanuZ5Wp7meV
        qe5nlanuZ5Wp7meVqe5nlanuZ5Wp7meVqe5nlanuZ5Wp7meVqe5nlanuZ5Wp7meVqe5nlanuZ5Wp7meV
        qe5nlanuZ5Wp7meVqe5nlanuZ5Wp7meVqe5nlanuZ5Wp7meVqe5olanqaJaolgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABmlqpLZ5SomWeUqJlnlKiZZ5SomWeUqJlnlKiZZ5SomWeUqJlnlKiZZ5SomWeUqJlnlKiZZ5SomWeU
        qJlnlKiZZ5SomWeUqJlnlKiZZ5SomWeUqJlnlKiZZ5SomWeUqJlnlKiZZ5SomWeUqJlnlKiZZ5SomWeU
        qJlnlKiZZpaqS2eVqfBnlan/Z5Wp/2eVqf9nlan/Z5Wp/2eVqf9nlan/Z5Wp/2eVqf9nlan/Z5Wp/2eV
        qf9nlan/Z5Wp/2eVqf9nlan/Z5Wp/2eVqf9nlan/Z5Wp/2eVqf9nlan/Z5Wp/2eVqf9nlan/Z5Wp/2eV
        qf9nlan/Z5Wp/2eVqf9nlanvaJWoh2eVqdlnlajdZ5Wo3WeVqN1nlajdZ5Wo3WeVqN1nlajdZ5Wo3WeV
        qN1nlajdZ5Wo3WeVqN1nlajdZ5Wo3WeVqN1nlajdZ5Wo3WeVqN1nlajdZ5Wo3WeVqN1nlajdZ5Wo3WeV
        qN1nlajdZ5Wo3WeVqN1nlajdZ5Wp2WeUqYYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        px1nlanuZ5Wp/2eVqeZmmaYUAAAAAAAAAABnlaheZ5Wp/meVqf9nlan/Z5Wp/2eVqaQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbZKkDmaVqOBnlan/Z5Wp7GSQ
        pheAgIACZ5WpvmeVqf9nlan+aJOpRwAAAAAAAAAAAAAAAAAAAABnlKiBZ5Wp/2eVqf9nlajUXYuiCwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZZapRGeV
        qf5nlan/Z5WqrWiVqXZnlan/Z5Wp/2iVqZEAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wFolamMaJWpwGeY
        rCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAZpWpmGeVqf9nlan/Z5Wp/GeVqf9nlajUcY6qCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABinbENZ5Wp32eVqf9nlan/Z5Wp+GeSqC8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABnlKdDZ5Wp/meVqf9mlKp1AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABplqpOaJWpZQD//wEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////gAAAAQAAAAAAAAAA//////////+AAAABAAAAAAAA
        AAD//////////7////0f///4H///8I//5/HH/8fjx/+Px+P/D4fx/x+P8f4PH/j8Bj/8fGB//Hjwf/4x
        8P//Efn//wP///+H////z///////////////////
</value>
  </data>
</root>